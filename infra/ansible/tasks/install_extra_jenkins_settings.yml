- name: Read initial admin password from Jenkins filesystem
  slurp:
    src: /var/lib/jenkins/secrets/initialAdminPassword
  register: initial_pw
  become: true
  run_once: true

- name: Set Jenkins admin password fact   # get the initial admin password from ansible debug message during plabybook run
  set_fact:
    jenkins_admin_password: "{{ initial_pw.content | b64decode | trim }}"

- name: Wait for Jenkins to be up and responding
  uri:
    url: "http://localhost:8080/login"
    status_code: 200
  register: jstat
  until: jstat.status == 200
  retries: 10
  delay: 15
  become: false

- name: Install OpenID Connect plugin
  community.general.jenkins_plugin:
    name: openid-connect
    state: latest
    url: "http://localhost:8080"
    url_username: "admin"
    url_password: "{{ jenkins_admin_password }}"
    with_dependencies: true
  become: true
  notify: restart jenkins

# Install “Role Strategy” plugin (for mapping groups to permissions)
- name: Ensure Role Strategy plugin is installed (for role-based auth)
  community.general.jenkins_plugin:
    name: role-strategy
    state: latest
    url: "http://localhost:8080"
    url_username: "admin"
    url_password: "{{ jenkins_admin_password }}"
  become: true
  notify: restart jenkins

- name: Ensure init.groovy.d directory exists
  file:
    path: /var/lib/jenkins/init.groovy.d
    state: directory
    owner: jenkins
    group: jenkins
    mode: '0755'

- name: Copy OIDC init script into Jenkins
  copy:
    src: jenkins/oidc-init.groovy
    dest: /var/lib/jenkins/init.groovy.d/01-oidc.groovy
    owner: jenkins
    group: jenkins
    mode: '0644'
  notify: restart jenkins

- name: Configure Jenkins to bind on localhost only
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^HTTP_HOST='
    line: 'HTTP_HOST=127.0.0.1'
    state: present
  notify: restart jenkins

- name: Install Nginx
  apt:
    name: nginx
    state: present
    update_cache: yes

- name: Create Nginx site for Jenkins (HTTP → HTTPS redirect)
  copy:
    dest: /etc/nginx/sites-available/jenkins-http.conf
    content: |
      server {
          listen 80;
          server_name {{ jenkins_domain }};

          # Do not serve any files—just redirect everything to HTTPS
          return 301 https://$host$request_uri;
      }
  notify: reload nginx

- name: Create Jenkins temporary HTTP-only Nginx site
  copy:
    dest: /etc/nginx/sites-available/jenkins-temp.conf
    owner: root
    group: root
    mode: '0644'
    content: |
      server {
          listen 80;
          server_name {{ jenkins_domain }};

          # Proxy all traffic to Jenkins on localhost:8080 (no SSL here)
          location / {
              proxy_pass          http://127.0.0.1:8080;
              proxy_set_header    Host              $host;
              proxy_set_header    X-Real-IP         $remote_addr;
              proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
              proxy_set_header    X-Forwarded-Proto $scheme;
              proxy_buffering     off;
          }
      }
  notify: reload nginx

- name: Enable Jenkins temporary HTTP-only site
  file:
    src: "/etc/nginx/sites-available/jenkins-temp.conf"
    dest: "/etc/nginx/sites-enabled/jenkins-temp.conf"
    state: link
  notify: reload nginx

- name: Disable default Nginx site (if present)
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: reload nginx

# - name: Install Certbot + Nginx plugin
#   apt:
#     name:
#       - certbot
#       - python3-certbot-nginx
#     state: present
#     update_cache: yes

# - name: Obtain or renew Let's Encrypt certificate for Jenkins
#   command: >
#     certbot --nginx
#             --non-interactive
#             --agree-tos
#             --email {{ letsencrypt_email }}
#             --redirect
#             -d {{ jenkins_domain }}
#   args:
#     creates: "/etc/letsencrypt/live/{{ jenkins_domain }}/fullchain.pem"
#   notify: reload nginx

# - name: Remove temporary HTTP-only site file
#   file:
#     path: "/etc/nginx/sites-available/jenkins-temp.conf"
#     state: absent

# - name: Remove temporary symlink in sites-enabled
#   file:
#     path: "/etc/nginx/sites-enabled/jenkins-temp.conf"
#     state: absent
#   notify: reload nginx

# - name: Ensure Certbot timer is enabled
#   systemd:
#     name: certbot.timer
#     enabled: true
#     state: started

- name: Read initial admin password from Jenkins filesystem2
  slurp:
    src: /var/lib/jenkins/secrets/initialAdminPassword
  register: initial_pw
  become: true
  run_once: true
