---
- name: Wait for API server to be reachable
  wait_for:
    host: "{{ hostvars[groups['master-node'][0]].ansible_default_ipv4.address }}"
    port: 6443
    state: started
    timeout: 300

- name: "Check whether this node is already registered"
  ansible.builtin.command: >
    kubectl get node {{ inventory_hostname }}
      --kubeconfig /home/{{ ansible_user }}/.kube/config
  register: node_check
  failed_when: false
  changed_when: false
  delegate_to: "{{ groups['master-node'][0] }}"

- name: Cleanup any partial kubeadm state
  become: true
  ansible.builtin.shell: |
    kubeadm reset -f
    rm -rf /etc/kubernetes/pki \
            /etc/kubernetes/kubelet.conf \
            /etc/kubernetes/bootstrap-kubelet.conf \
            /etc/kubernetes/admin.conf \
            /var/lib/etcd \
            /var/lib/kubelet/*
  ignore_errors: true
  when: node_check.rc != 0

- name: "Join the Kubernetes cluster"
  ansible.builtin.shell: >
    {{ hostvars[groups['master-node'][0]].join_command }}
    --apiserver-advertise-address={{ hostvars[groups['master-node'][0]].ansible_default_ipv4.address }}
    --ignore-preflight-errors=all
  become: true
  when: node_check.rc != 0

- name: Ensure kubeconfig directory exists on worker
  file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: '0755'

- name: Create kubeconfig on worker node
  copy:
    content: "{{ kubeconfig_data | b64decode }}"
    dest: "{{ ansible_env.HOME }}/.kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

###################################################
#  Ensure Python3 and pip exist (dist-agnostic)   #
###################################################
- name: Install python3 & pip on worker
  become: true
  package:
    name:
      - python3
      - python3-pip
  when:
    - "'worker-node' in group_names"
    - ansible_pkg_mgr == "apt"

- name: Install python3 & pip on worker (Yum/RHEL/Amazon Linux)
  become: true
  package:
    name:
      - python3
      - python3-pip
  when:
    - "'worker-node' in group_names"
    - ansible_pkg_mgr == "yum"

- name: Install Kubernetes Python client (pip3)
  become: true
  pip:
    name: kubernetes==27.2.0
    executable: pip3
  when: "'worker-node' in group_names"