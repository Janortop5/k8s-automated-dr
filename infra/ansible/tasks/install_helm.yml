---
# Playbook to install Helm and Prometheus on a Kubernetes cluster
- name: Add Helm signing key
  ansible.builtin.apt_key:
    url: https://baltocdn.com/helm/signing.asc
    state: present
  register: helm_key_result
  until: helm_key_result is succeeded
  retries: 3
  delay: 5

- name: Install apt-transport-https
  ansible.builtin.apt:
    name: apt-transport-https
    state: present
    update_cache: yes

- name: Add Helm repository
  ansible.builtin.apt_repository:
    repo: "deb https://baltocdn.com/helm/stable/debian/ all main"
    state: present
    filename: helm-stable-debian

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install Helm
  ansible.builtin.apt:
    name: helm
    state: present
  register: helm_install_result

# Verify Helm is installed correctly
- name: Verify Helm installation
  ansible.builtin.command: helm version
  register: helm_version
  changed_when: false
  failed_when: helm_version.rc != 0

# Add Prometheus Helm repository
- name: Add Prometheus Helm repository
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts
  register: helm_repo_add

- name: Add Grafana Helm repository
  kubernetes.core.helm_repository:
    name: grafana
    repo_url: https://grafana.github.io/helm-charts
  register: helm_repo_add


# Update Helm repositories
- name: Update Helm repositories
  ansible.builtin.command: helm repo update
  changed_when: true
  register: helm_repo_update
  until: helm_repo_update is succeeded

- name: Push Prometheus values to remote
  ansible.builtin.copy:
    src: values-prometheus.yaml
    dest: /tmp/values-prometheus.yaml
    mode: '0644'
    
- name: Install Prometheus using Helm
  kubernetes.core.helm:
    name: prometheus
    chart_ref: prometheus-community/kube-prometheus-stack
    namespace: monitoring
    create_namespace: true
    state: present
    values_files: /tmp/values-prometheus.yaml

- name: Install standalone Promtail for audit logs
  kubernetes.core.helm:
    name: promtail-audit
    chart_ref: grafana/loki-stack
    namespace: monitoring
    create_namespace: false
    state: present
    kubeconfig: /etc/kubernetes/admin.conf 
    values:
      loki:
        enabled: false
      promtail:
        enabled: true
        extraVolumes:
          - name: audit-logs
            hostPath:
              path: /var/log/kubernetes/audit
              type: DirectoryOrCreate
        extraVolumeMounts:
          - name: audit-logs
            mountPath: /var/log/kubernetes/audit
            readOnly: true
        extraScrapeConfigs: |
          - job_name: kubernetes-audit
            static_configs:
              - targets: ['localhost']
                labels:
                  job: kubernetes-audit
                  __path__: /var/log/kubernetes/audit/audit.log