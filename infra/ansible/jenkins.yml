---
- hosts: master-node:jenkins-server
  become: true
  gather_facts: true
  vars_files:
    - host_vars/jenkins-ci.yml
    - host_vars/nodejs-trigger.yml
    - group_vars/secrets.yml
    - group_vars/all.yml

  pre_tasks:
    - name: Verify required files exist
      stat:
        path: "{{ item }}"
      register: file_check
      failed_when: not file_check.stat.exists
      delegate_to: localhost
      become: false
      loop:
        - "{{ kubeconfig_main_path }}"
        - "{{ kubeconfig_agent_path }}"
        - "{{ ssh_key_path }}"

    - name: Verify Vault is accessible
      uri:
        url: "{{ remote_vault_address }}/v1/sys/health"
        method: GET
        headers:
          X-Vault-Token: "{{ remote_vault_token }}"
      become: false
      delegate_to: localhost
      register: vault_health
      failed_when: vault_health.status != 200

  tasks:
  - name: Install Docker
    import_tasks: tasks/install_docker.yml
    tags: docker
    when: "'jenkins-server' in group_names"

  - name: Install Jenkins
    import_tasks: tasks/install_jenkins.yml
    tags: jenkins
    when: "'jenkins-server' in group_names"

  - name: Setup Vault Container
    import_tasks: tasks/setup_vault.yml
    tags: vault
    become: true
    when: "'jenkins-server' in group_names"
    
  - name: Setup Jenkins dependencies
    import_tasks: tasks/install_extra_jenkins_settings.yml
    tags: jenkins
    when: "'jenkins-server' in group_names"

  - name: Install required Jenkins plugins
    import_tasks: tasks/install_required_jenkins_plugins.yml
    tags: jenkins
    become: True
    when: "'jenkins-server' in group_names"
  
  - name: Jenkins trigger configuration
    import_tasks: tasks/setup_recovery.yml
    tags: jenkins
    when: "'jenkins-server' in group_names"


  - name: Share jenkins_live_domain with all hosts
    set_fact:
      jenkins_live_domain: "{{ hostvars[groups['jenkins-server'][0]].jenkins_live_domain }}"
    delegate_to: "{{ item }}"
    delegate_facts: true
    with_items: "{{ groups['all'] }}"
    run_once: true

  - name: Update Metrics Collector
    import_tasks: tasks/update_metrics_collector.yml
    tags: metrics
    when: "'master-node' in group_names"

  handlers:
    - name: restart jenkins
      systemd:
        name: jenkins
        state: restarted

    - name: reload nginx
      service:
        name: nginx
        state: reloaded

    - name: reload systemd
      systemd:
        daemon_reload: yes

    - name: restart nodejs-trigger
      systemd:
        name: "{{ app_name }}"
        state: restarted
